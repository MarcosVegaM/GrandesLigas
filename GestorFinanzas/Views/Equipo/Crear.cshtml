@model GrandesLigasAPI.Models.Equipo

@{
    ViewData["Title"] = "Crear Nuevo Equipo";
}

<h2 class="text-center my-4">Registrar Nuevo Equipo</h2>

@using (Html.BeginForm("Crear", "Equipo", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow-lg">
                    <div class="card-header text-center bg-primary text-white">
                        <h4><i class="fas fa-shield-alt me-2"></i>Datos del Equipo</h4>
                    </div>
                    <div class="card-body">
                        <!-- Nombre del Equipo -->
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Nombre, new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(model => model.Nombre,
                                     new
                                     {
                                         @class = "form-control",
                                         placeholder = "Ingrese el nombre del equipo",
                                         required = "required"
                                     })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>

                        <!-- Ciudad -->
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Ciudad, new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(model => model.Ciudad,
                                     new
                                     {
                                         @class = "form-control",
                                         placeholder = "Ingrese la ciudad del equipo",
                                         required = "required"
                                     })
                            @Html.ValidationMessageFor(model => model.Ciudad, "", new { @class = "text-danger" })
                        </div>

                        <!-- Liga -->
                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.LigaId, "Liga", new { @class = "form-label" })
                            @Html.DropDownListFor(model => model.LigaId, ViewData["Ligas"] as List<SelectListItem>, "Seleccione una liga", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LigaId, "", new { @class = "text-danger" })
                        </div>

                        <!-- Logo del Equipo -->
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Logo, new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <input type="file" class="form-control" id="LogoInput" name="LogoFile" accept="image/*" />
                                @Html.HiddenFor(model => model.Logo)
                            </div>
                            <div class="mt-2 text-center">
                                <img id="LogoPreview" src="#" alt="Vista previa del logo" class="img-thumbnail d-none" style="max-width: 150px; max-height: 150px;" />
                            </div>
                            @Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })
                            <small class="text-muted">Suba el logo del equipo (JPEG/PNG, máx. 5MB)</small>
                        </div>

                        <!-- Foto del Estadio -->
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.FotoEstadio, new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <input type="file" class="form-control" id="EstadioInput" name="EstadioFile" accept="image/*" />
                                @Html.HiddenFor(model => model.FotoEstadio)
                            </div>
                            <div class="mt-2 text-center">
                                <img id="EstadioPreview" src="#" alt="Vista previa del estadio" class="img-thumbnail d-none" style="max-width: 300px; max-height: 150px;" />
                            </div>
                            @Html.ValidationMessageFor(model => model.FotoEstadio, "", new { @class = "text-danger" })
                            <small class="text-muted">Suba una foto del estadio (JPEG/PNG, máx. 5MB)</small>
                        </div>

                        <div class="form-group text-center mt-4">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-save me-2"></i>Guardar Equipo
                            </button>
                            <a href="@Url.Action("Index", "Equipo")" class="btn btn-outline-secondary btn-lg ms-3">
                                <i class="fas fa-times me-2"></i>Cancelar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // Configuración para el logo
            setupImageUpload('LogoInput', 'Logo', 'LogoPreview');

            // Configuración para la foto del estadio
            setupImageUpload('EstadioInput', 'FotoEstadio', 'EstadioPreview');

            function setupImageUpload(inputId, hiddenInputId, previewId) {
                const input = document.getElementById(inputId);
                const preview = document.getElementById(previewId);
                const maxSize = 5 * 1024 * 1024; // 5MB

                input.addEventListener('change', function(e) {
                    const file = e.target.files[0];

                    if (file) {
                        // Validar tamaño
                        if (file.size > maxSize) {
                            alert('El archivo es demasiado grande (máximo 5MB)');
                            e.target.value = '';
                            preview.classList.add('d-none');
                            return;
                        }

                        // Validar tipo de archivo
                        if (!file.type.match('image.*')) {
                            alert('Por favor seleccione un archivo de imagen (JPEG/PNG)');
                            e.target.value = '';
                            preview.classList.add('d-none');
                            return;
                        }

                        // Mostrar vista previa
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            preview.src = e.target.result;
                            preview.classList.remove('d-none');

                            // Convertir a base64 para el campo hidden
                            const base64String = e.target.result.split(',')[1];
                            document.getElementById(hiddenInputId).value = base64String;
                        };
                        reader.readAsDataURL(file);
                    } else {
                        preview.classList.add('d-none');
                    }
                });
            }
        });
    </script>
}

<style>
    .card {
        border-radius: 15px;
        border: none;
        overflow: hidden;
    }

    .card-header {
        border-radius: 15px 15px 0 0 !important;
        padding: 1.5rem;
    }

    .card-body {
        padding: 2rem;
    }

    .form-control, .form-select {
        border-radius: 8px;
        padding: 0.75rem 1rem;
        border: 1px solid #ced4da;
    }

    .form-label {
        font-size: 1.05rem;
        margin-bottom: 0.5rem;
    }

    .btn-lg {
        padding: 0.75rem 2rem;
        font-size: 1.1rem;
        border-radius: 8px;
        font-weight: 500;
    }

    .img-thumbnail {
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        transition: transform 0.3s;
    }

        .img-thumbnail:hover {
            transform: scale(1.05);
        }

    .input-group {
        margin-bottom: 0.5rem;
    }
</style>
