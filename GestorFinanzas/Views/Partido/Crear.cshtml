@model GrandesLigas.Models.Partido

@{
    ViewData["Title"] = "Crear Partido";
}

<h2 class="text-center my-4">Programar Nuevo Partido</h2>

@using (Html.BeginForm("Crear", "Partido", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow-lg">
                    <div class="card-header text-center bg-primary text-white">
                        <h4><i class="fas fa-calendar-alt me-2"></i>Datos del Partido</h4>
                    </div>
                    <div class="card-body">
                        <!-- Liga -->
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.LigaId, "Liga", new { @class = "form-label fw-bold" })
                            @Html.DropDownListFor(model => model.LigaId,
                                     new SelectList(ViewBag.Ligas as List<SelectListItem>, "Value", "Text"),
                                     "Seleccione una liga",
                                     new { @class = "form-select", required = "required" })
                            @Html.ValidationMessageFor(model => model.LigaId, "", new { @class = "text-danger" })
                        </div>

                        <!-- Fecha -->
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Fecha, new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(model => model.Fecha,
                                     new
                                     {
                                         @class = "form-control",
                                         type = "datetime-local",
                                         required = "required"
                                     })
                            @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                        </div>

                        <!-- Lugar -->
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Lugar, new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(model => model.Lugar,
                                     new
                                     {
                                         @class = "form-control",
                                         placeholder = "Ingrese el estadio o lugar del partido"
                                     })
                            @Html.ValidationMessageFor(model => model.Lugar, "", new { @class = "text-danger" })
                        </div>

                        <!-- Equipo Local -->
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.EquipoLocalId, "Equipo Local", new { @class = "form-label fw-bold" })
                            @Html.DropDownListFor(model => model.EquipoLocalId,
                                     new SelectList(ViewBag.Equipos as List<SelectListItem>, "Value", "Text"),
                                     "Seleccione equipo local",
                                     new { @class = "form-select equipo-select", required = "required" })
                            @Html.ValidationMessageFor(model => model.EquipoLocalId, "", new { @class = "text-danger" })
                        </div>

                        <!-- Equipo Visitante -->
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.EquipoVisitanteId, "Equipo Visitante", new { @class = "form-label fw-bold" })
                            @Html.DropDownListFor(model => model.EquipoVisitanteId,
                                     new SelectList(ViewBag.Equipos as List<SelectListItem>, "Value", "Text"),
                                     "Seleccione equipo visitante",
                                     new { @class = "form-select equipo-select", required = "required" })
                            @Html.ValidationMessageFor(model => model.EquipoVisitanteId, "", new { @class = "text-danger" })
                            <small id="equipoError" class="text-danger d-none">No puede seleccionar el mismo equipo como local y visitante</small>
                        </div>

                        <div class="form-group text-center mt-4">
                            <button type="submit" id="submitBtn" class="btn btn-primary btn-lg">
                                <i class="fas fa-save me-2"></i>Guardar Partido
                            </button>
                            <a href="@Url.Action("Index", "Partido")" class="btn btn-outline-secondary btn-lg ms-3">
                                <i class="fas fa-times me-2"></i>Cancelar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const equipoLocalSelect = document.getElementById('EquipoLocalId');
            const equipoVisitanteSelect = document.getElementById('EquipoVisitanteId');
            const equipoError = document.getElementById('equipoError');
            const submitBtn = document.getElementById('submitBtn');

            function validarEquipos() {
                if (equipoLocalSelect.value && equipoVisitanteSelect.value &&
                    equipoLocalSelect.value === equipoVisitanteSelect.value) {
                    equipoError.classList.remove('d-none');
                    submitBtn.disabled = true;
                    return false;
                } else {
                    equipoError.classList.add('d-none');
                    submitBtn.disabled = false;
                    return true;
                }
            }

            equipoLocalSelect.addEventListener('change', validarEquipos);
            equipoVisitanteSelect.addEventListener('change', validarEquipos);

            // Validación inicial
            validarEquipos();
        });
    </script>
}

<style>
    .card {
        border-radius: 10px;
    }

    .card-header {
        border-radius: 10px 10px 0 0 !important;
    }

    .form-control, .form-select {
        border-radius: 5px;
    }

    .btn-lg {
        padding: 0.5rem 1.5rem;
        font-size: 1.1rem;
    }

    .fa-calendar-alt {
        color: #ffc107; /* Color dorado para el icono de calendario */
    }
</style>